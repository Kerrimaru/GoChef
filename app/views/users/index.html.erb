<div class="hero">
    <div id="carousel">
      <div class="hero" style="background-image:url(/images/hero/chili.jpg);"></div>
      <div class="hero" style="background-image:url(/images/hero/header.jpg);"></div>
      <div class="hero" style="background-image:url(/images/hero/pasta.jpg);"></div>
      <div class="hero" style="background-image:url(/images/hero/break.jpg);"></div>
      <div class="hero" style="background-image:url(/images/hero/hero.jpg);"></div>
    </div>
    <div class="hero-buttons">
        <%= render 'login' %>
    </div>
    <div class="col-50 welcome-text">
      <div class="ellipse ellipse1"></div>
      <div class="ellipse ellipse2"></div>
      <div class="ellipse ellipse3"></div>
      <div class="ellipse ellipse4"></div>
      <h1>Go Chef!</h1>
      <span>Connecting you with cooks</span>
    </div>
    <a id='blah' href="#filter"><i class="fas fa-chevron-down fa-3x"></i></a>
</div>
<div id="filter">
  <h3>Refine yo search!</h3>
  <%= form_tag '', :method => :get do %>
  <div class="form-group">
  <%= text_field_tag :name, nil, placeholder: 'Chef Name' %>
  </div>
  <div class="form-group">
  <%= collection_select(:skills, :ids, @skills, :id, :name, {selected: false}, {multiple: true, class: 'multiselect'}) %>
  </div>
  <div class="form-group">
  <%= text_field_tag :location, nil, placeholder: 'Your Location' %>
  </div>
  <%= submit_tag 'Filter' %>
</div>
<div class='home-chefs'>
  <div class='chef-list col-50'>
  <% @users.each do |user| %>
    <% if user.role == 'chef' %>
      <a href="users/<%= user.id %>" class="user-profile">
      <div class="avatar" style="background-image:url(<%= user.avatar.url %>);"></div>
      <div class="text">
        <h5><%= user.name %></h5>
        <% if user.reviews_received.length > 0 %>
          <p><% rating = ((user.reviews_received.map.sum do |review| %>
            <% review.rating %>
          <% end) / user.reviews_received.length) %>
          <% rating.times do  %>
            <%= puts %><i class="far fa-star"></i>
          <% end %>
          out of <%= user.reviews_received.length %> reviews</p>                     
        <% end %>
        <p><%= user.bio %></p>
      </div>
      </a>
    <% end %>
  <% end %>
  </div>
    <div class="col-50 map">
        <div id="mapid"></div>
    </div>
</div>

<!-- <% end %> -->
</div>
<script>

class MapPlotter{
  constructor(id){
      this.map = L.map(id).setView([51.505, -0.09], 13);
      this.layer = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
          attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
          maxZoom: 18,
          id: 'mapbox.streets',
          accessToken: 'pk.eyJ1IjoiczBuaWN5MHV0aCIsImEiOiJjamc3NHh5a3EwMDMwMzJyemZwMmhhMTRsIn0.PAhVCOJjKkTMquhm4KKqwA'
      }).addTo(this.map);
      this.populateMap();
  }

  populateMap(){
    $.get('/', function(data){
      this.data = data;
      $.each(data.user,function( index, value ) {
        if (value.role == "chef") {
          let a = document.createElement('a');
          let text = document.createTextNode(data.user[index].name);
          a.appendChild(text);
          a.title = data.user[index].name;
          a.href = "/users/" + data.user[index].id;
          let locationLat = data.user[index].location_lat;
          let locationLon = data.user[index].location_lon;
          L.marker([locationLat, -locationLon]).addTo(this.map).bindPopup(a);
        };
      }.bind(this));
    }.bind(this));
  }

}

$(document).ready(function(){
    let mp = new MapPlotter('mapid');
    smoothScroll (300);
});

$(document).ready(function(){
    $('.multiselect').chosen({disable_search_threshold: 10, no_results_text: 'No results matched', width: '100%'});
});

var Carousel = function(id){
  var self = this;
  this.el = document.getElementById(id);
  this.imgs = this.el.querySelectorAll('div');
  this.currentImage = 0;
  this.imgs[this.currentImage].classList.add('show');
  window.setInterval(function(){ self.advanceImg() }, 10000);
}
Carousel.prototype.advanceImg = function(){
this.currentImage++;
if(this.currentImage === this.imgs.length){
  this.currentImage = 0;
}
for(var i=0; i< this.imgs.length; i++){
  if(this.currentImage === i){
    this.imgs[i].classList.add('show');
  }else{
    this.imgs[i].classList.remove('show');
  }
}
}

myCarousel = new Carousel("carousel");

function smoothScroll (duration) { 
  $('a[href^="#"]').on('click', function(event) { 
    var target = $( $(this).attr('href') ); 
    if( target.length ) { 
      event.preventDefault(); 
      $('html, body').animate({ 
      scrollTop: target.offset().top  
      }, duration); 
    } 
  }); 
}

</script>
